****** Data Transfer Object ******

Data Transfer Object (DTO) — один из шаблонов проектирования, используется для передачи
данных между подсистемами приложения.

Data Transfer Object, в отличие от business object или data access object не должен содержать
какого-либо поведения.

Зачастую, в клиент-серверных приложениях, данные на клиенте (слой представления) и на сервере
(слой предметной области) структурируются по-разному. На стороне сервера это дает нам возможность
комфортно хранить данные в базе данных или оптимизировать использование данных в угоду
производительности, в то же время заниматься "user-friendly" отображением данных на клиенте, и,
для серверной части, нужно найти способ как переводить данные из одного формата в другой.

Конечно, существуют и другие архитектуры приложений, но мы остановимся на текущей в качестве
упрощения. DTO-подобные объекты могут использоваться между любыми двумя слоями представления
данных (см. DTO_example.png).

DTO — это так называемый value-object на стороне сервера, который хранит данные, используемые в
слое представления. DTO можно разделить на те, что мы используем при запросе (Request) и на те,
что мы возвращаем в качестве ответа сервера (Response).

Хорошие DTO помогают создавать API согласно лучшим практикам и в соответствие с принципом чистого кода.

DTO должны позволять разработчикам писать API, которое внутренне согласовано. Описание параметра на
одной из конечных точек (endpoint) должно применяться и к параметрам с тем же именем на всех связанных
точках. В качестве примера, если поле price при запросе определено как "цена с НДС", то и в ответе
определение поля price не должно измениться. Согласованное API предотвращает ошибки, которые могли
возникнуть из-за различий между конечными точками.

DTO должны быть надёжными и сводить к минимуму необходимость в написании шаблонного кода. Если при
написании DTO легко допустить ошибку, то вам нужно прилагать дополнительные усилия, чтобы ваше API
оставалось согласованным. DTO должны "легко читаться", ведь даже если у нас есть хорошее описание
данных из слоя представления — оно будет бесполезно, если его тяжело найти.
