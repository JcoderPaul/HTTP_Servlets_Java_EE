****** Структура каталогов Tomcat ******

Каталог Tomcat в основном должен включать следующие каталоги:

/bin - Запускать и останавливать файлы сценариев Tomcat
/conf -	Различные глобальные файлы конфигурации для сервера Tomcat
/lib -	Различные файлы JAR, необходимые для сервера Tomcat
/logs -	Файлы журнала
/webapps - Опубликовать каталог и файл, соответствующий приложению
/work - Файлы классов, сгенерированные после компиляции JSP

****** Конфигурация Tomcat ******

Основные конфигурационные файлы, включенные в Tomcat:

- server.xml - Основной конфигурационный файл Tomcat
- context.xml - Конфигурация контекста по умолчанию, применяется ко всему содержимому конфигурации всех хостов, где установлен tomcat
- web.xml - Web.xml по умолчанию
- catalina.policy - Файл политики безопасности JAVA

Файл настроек server.xml:

server - port - Укажите порт, этот порт отвечает за
                прослушивание запросов на закрытие
                tomcat.
server - shutdown - Укажите командную строку,
                    отправляемую в порт.
service - name - Укажите название услуги.
Connector - port - Укажите номер порта, который будет создан
                   на стороне сервера, и прослушивайте запросы
                   от клиентов на этом порту.
Connector - minProcessors - Количество потоков обработки запросов,
                            созданных при запуске сервера.
Connector - maxProcessors - Максимальное количество потоков, которое
                            может быть создано для обработки запросов.
Connector - enableLookups - Если true, вы можете получить фактическое
                            имя хоста удаленного клиента, вызвав
                            request.getRemoteHost () для DNS-запроса.

                            Если false, DNS-запрос не выполняется, но
                            возвращается его IP-адрес.
Connector - redirectPort - Указывает номер порта, который будет перенаправлен
                           после получения запроса на передачу SSL, когда
                           сервер обрабатывает запрос http.
Connector - acceptCount - Указывает количество запросов, которые могут быть
                          помещены в очередь обработки, когда используются все
                          доступные потоки запросов на обработку. Запросы,
                          превышающие это число, не будут обрабатываться.
Connector - connectionTimeout - Укажите количество тайм-аутов в миллисекундах.

Engine (представляет обработчик
запросов в указанной службе,
получает и обрабатывает запросы
от Connector) - defaultHost - Указывает имя хоста по умолчанию для обработки
                              запросов, которое по крайней мере совпадает со
                              значением атрибута имени одного из элементов хоста.

Context (представляет веб-приложение,
обычно файл WAR, подробности о WAR
смотрите в спецификации сервлета) - docBase - Путь к приложению или путь к файлу WAR.

Context - path - Представляет префикс URL-адреса этого веб-приложения, поэтому
                 запрошенный URL-адрес http://localhost:8080/path/***&#42;

Context - reloadable - Это свойство очень важно. Если true, то tomcat автоматически
                       обнаружит изменения в каталогах, / WEB-INF / lib и / WEB-INF
                       / classes, приложения и автоматически загрузит новые приложения.
                       Мы можем сделать это без перезапуска tomcat.

host - (представляет виртуальный хост) - name -	Указание имени хоста.
host -	appBase - Базовый каталог приложения, который является каталогом, в котором
                  хранится приложение.

host - unpackWARs - Если true, tomcat автоматически распакует файл WAR, в противном
                    случае запустите приложение непосредственно из файла WAR, не
                    распаковывая его.

Logger - (представляет журналы, отладку
         и сообщения об ошибках) - className - Задает имя класса, используемого
                                               регистратором. Этот класс должен
                                               реализовывать интерфейс
                                               org.apache.catalina.Logger.

Logger - prefix - Укажите префикс файла журнала.
Logger - suffix - Укажите суффикс файла журнала.
Logger - timestamp - Если true, добавьте время к имени файла журнала, как в следующем
                     примере: localhost_log.001-10-04.txt
Realm - (представляет базу данных, в которой
         хранятся имя пользователя, пароль и
         роль) - className - Задает имя класса, используемого Realm. Этот класс должен
                             реализовывать интерфейс org.apache.catalina.Realm.

Valve - (программное обеспечение, запрашивающее
         обработку контейнера) - className - Укажите имя класса, используемого Valve,
                                             например org.apache.catalina.valves.AccessLog

Listener - className - Элемент listner создает и настраивает объект LifecyleListner,
                       который используется для наблюдения за созданием и удалением
                       контейнеров. Обычно он связан со временем запуска сервера, что
                       удобно для tomcat для запуска нового кода.